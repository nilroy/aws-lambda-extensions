AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Lambda Extensions S3 Logs Demo
##########################################################################
#  Parameters & Globals                                                  #
##########################################################################
Globals:
  Function:
    Tracing: Active
    Tags:
      Application: S3LogsExtensionDemo
Resources:
##########################################################################
#  Lambda functions                                                      #
##########################################################################
  Function:
    Type: AWS::Serverless::Function
    Properties:
      Architectures:
        - arm64
      FunctionName: logs-extension-demo-function
      Description: Logs Extension Demo Function
      CodeUri: functionsrc/
      Runtime: python3.10
      Handler: lambda_function.lambda_handler
      Role: !GetAtt TestLambdaRole.Arn
      MemorySize: 128
      Timeout: 100
      Environment:
        Variables:
          LOG_BUCKET_NAME:
            Ref: LogExtensionsBucket
          DISPATCH_MIN_BATCH_SIZE: 3
          S3_BUCKET_NAME:
            Ref: LogExtensionsBucket
      Layers:
        - !Ref S3LogExtensionsLayer
      Policies:
        - S3WritePolicy:
            BucketName: !Ref LogExtensionsBucket
      VpcConfig:
        SecurityGroupIds:
          - !Ref TestSecutiyGroup
        SubnetIds:
          - subnet-013b434c4a4c099a1 
          - subnet-03ffe62e6bff3c485  
          - subnet-0f97f57b120ce19ef 
##########################################################################
# VPC Configuration                                                      #
##########################################################################

  TestSecutiyGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow ingress from all resources in the environment
      VpcId: vpc-0c88a7f58adbcdc58
      GroupName: TestSecutiyGroup-lambda-telemetry
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 10.242.0.0/16
            

  TestLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: TestLambdaRole-lambda-telemetry
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CloudWatchLogsAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/logs-extension-demo-function:*"
        - PolicyName: LogBucketPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListAllMyBuckets
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:PutObjectAcl
                  - s3:PutLifecycleConfiguration
                Resource:
                  - !Sub "arn:aws:s3:::${LogExtensionsBucket}/*"
                  - !Sub "arn:aws:s3:::${LogExtensionsBucket}"

##########################################################################
#  Lambda layers                                                         #
##########################################################################
  S3LogExtensionsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      Description: Layer containing extension(s)
      ContentUri: extensionssrc/
      CompatibleRuntimes:
        - python3.10
      LicenseInfo: 'Available under the MIT-0 license.'
      RetentionPolicy: Delete
    Metadata:
      BuildMethod: makefile
##########################################################################
#  S3 Resources                                                   #
##########################################################################
  LogExtensionsBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      LifecycleConfiguration:
        Rules:
          - Id: DeleteAfterSevenDays
            Status: "Enabled"
            ExpirationInDays: 7
##########################################################################
#  OUTPUTS                                                               #
##########################################################################
Outputs:
  # ExtensionsLayer:
  #   Value: !Ref S3LogExtensionsLayer
  #   Description: Log Extension Layer ARN
  Function:
    Value: !Ref Function
    Description: Lambda Function
  LogExtensionsBucketName:
    Value: !Ref LogExtensionsBucket
