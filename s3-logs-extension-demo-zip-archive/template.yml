AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Lambda Extensions S3 Logs Demo
##########################################################################
#  Parameters & Globals                                                  #
##########################################################################
Globals:
  Function:
    Tracing: Active
    Tags:
      Application: S3LogsExtensionDemo
Resources:
##########################################################################
#  Lambda functions                                                      #
##########################################################################

# CAIL Lambda Function test with VPC
  # Function:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     Architectures:
  #       - arm64
  #     FunctionName: logs-extension-demo-function
  #     Description: Logs Extension Demo Function
  #     CodeUri: functionsrc/
  #     Runtime: python3.10
  #     Handler: lambda_function.lambda_handler
  #     Role: !GetAtt TestLambdaRole.Arn
  #     MemorySize: 128
  #     Timeout: 100
  #     Environment:
  #       Variables:
  #         LOG_BUCKET_NAME:
  #           Ref: LogExtensionsBucket
  #         DISPATCH_MIN_BATCH_SIZE: 1
  #         S3_BUCKET_NAME:
  #           Ref: LogExtensionsBucket
  #     Layers:
  #       - !Ref S3LogExtensionsLayer
  #     Policies:
  #       - S3WritePolicy:
  #           BucketName: !Ref LogExtensionsBucket
  #     VpcConfig:
  #       SecurityGroupIds:
  #         - !Ref TestSecutiyGroup
  #       SubnetIds:
  #         - subnet-013b434c4a4c099a1 #Private Subnet
  #         - subnet-03ffe62e6bff3c485 #Private Subnet 
  #         - subnet-0f97f57b120ce19ef #Private Subnet
  #         # - subnet-09cb4c5725089323d #Public Subnet
  #         # - subnet-0eb7a6ceaa162abd1 #Public Subnet
  #         # - subnet-0636a6b76ec5c82db #Public Subnet

# lambda function without VPC
  Function:
    Type: AWS::Serverless::Function
    Properties:
      Architectures:
        - arm64
      FunctionName: logs-extension-demo-function
      Description: Logs Extension Demo Function
      CodeUri: functionsrc/
      Runtime: python3.10
      Handler: lambda_function.lambda_handler
      Role: !GetAtt TestLambdaRole.Arn
      MemorySize: 128
      Timeout: 100
      Environment:
        Variables:
          # LOG_BUCKET_NAME:
          #   Ref: LogExtensionsBucket
          DISPATCH_MIN_BATCH_SIZE: 5
          LOG_TRANSPORT: kinesis
          # S3_BUCKET_NAME:
          #   Ref: LogExtensionsBucket
          ENABLE_TELEMETRY_EXTENSION_METRICS: "true"
          ENABLE_TELEMETRY_EXTENSION_LOGGING: "true"
          LOG_STREAM_NAME:
            Ref: KinesisStream
      # Layers:
      #   - !Ref S3LogExtensionsLayer
      Policies:
        - S3WritePolicy:
            BucketName: !Ref LogExtensionsBucket

##########################################################################
# VPC Configuration
# IAM Configuration
# Log groups                                                     
##########################################################################
  FunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${Function}"
      RetentionInDays: 1

  # TestSecutiyGroup:
  #   Type: AWS::EC2::SecurityGroup
  #   Properties:
  #     GroupDescription: Allow ingress from all resources in the environment
  #     VpcId: vpc-0c88a7f58adbcdc58
  #     GroupName: TestSecutiyGroup-lambda-telemetry
  #     SecurityGroupIngress:
  #       - IpProtocol: tcp
  #         FromPort: 0
  #         ToPort: 65535
  #         CidrIp: 10.242.0.0/16
            

  TestLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: TestLambdaRole-lambda-telemetry
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CloudWatchLogsAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "logs:*"
                Resource: "*"
        - PolicyName: LogBucketPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListAllMyBuckets
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:PutObjectAcl
                  - s3:PutLifecycleConfiguration
                Resource:
                  - !Sub "arn:aws:s3:::${LogExtensionsBucket}/*"
                  - !Sub "arn:aws:s3:::${LogExtensionsBucket}"
              - Effect: Allow
                Action:
                  - cloudwatch:PutMetricData
                Resource: "*"
        - PolicyName: VPCAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ec2:CreateNetworkInterface
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DeleteNetworkInterface
                Resource: "*"
        - PolicyName: KinesisAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - kinesis:PutRecord
                  - kinesis:PutRecords
                  - kinesis:DescribeStream
                  - kinesis:DescribeStreamSummary
                  - kinesis:ListShards
                  - kinesis:GetShardIterator
                  - kinesis:GetRecords
                  - kinesis:ListStreams
                  - kinesis:DeleteRecords
                Resource: "*"
          

##########################################################################
#  Lambda layers                                                         #
##########################################################################
  S3LogExtensionsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      Description: Layer containing extension(s)
      ContentUri: extensionssrc/
      CompatibleRuntimes:
        - python3.10
      LicenseInfo: 'Available under the MIT-0 license.'
      RetentionPolicy: Delete
    Metadata:
      BuildMethod: makefile
##########################################################################
#  S3 Resources                                                   #
##########################################################################
  LogExtensionsBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      LifecycleConfiguration:
        Rules:
          - Id: DeleteAfterSevenDays
            Status: "Enabled"
            ExpirationInDays: 7
##########################################################################
# Kinesis and dyanmodb tables                                            #
##########################################################################

  KinesisStream:
    Type: AWS::Kinesis::Stream
    Properties:
      Name: !Sub "${AWS::StackName}-kinesis-stream"
      RetentionPeriodHours: 24
      ShardCount: 1

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${AWS::StackName}-dynamodb-table"
      AttributeDefinitions:
        - AttributeName: leaseKey
          AttributeType: S
      KeySchema:
        - AttributeName: leaseKey
          KeyType: "HASH"   
      ProvisionedThroughput:
        ReadCapacityUnits: 10
        WriteCapacityUnits: 10

  LogstashRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: KinesisAccessRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: "arn:aws:iam::687751045556:root"
            Action:
              - sts:AssumeRole
              - sts:TagSession
      Policies:
        - PolicyName: KinesisAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - kinesis:DescribeStream
                  - kinesis:DescribeStreamConsumer
                  - kinesis:DescribeStreamSummary
                  - kinesis:GetRecords
                  - kinesis:GetShardIterator
                  - kinesis:ListShards
                  - kinesis:ListStreams
                  - kinesis:PutRecord
                  - kinesis:PutRecords
                  - kinesis:SubscribeToShard
                Resource:
                  - !GetAtt KinesisStream.Arn
              - Effect: Allow
                Action:
                  - dynamodb:CreateTable
                  - dynamodb:BatchGetItem
                  - dynamodb:PutItem
                  - dynamodb:DescribeTable
                  - dynamodb:DeleteItem
                  - dynamodb:GetItem
                  - dynamodb:Scan
                  - dynamodb:Query
                  - dynamodb:UpdateItem
                Resource:
                  - "arn:aws:dynamodb:*:687751045556:table/s3-logs-extension-demo-dynamodb-table/index/*"
                  - "arn:aws:dynamodb:*:687751045556:table/s3-logs-extension-demo-dynamodb-table"

              - Effect: Allow
                Action:
                  - dynamodb:ListGlobalTables
                  - dynamodb:ListTables
                Resource: "*"
        


##########################################################################
#  OUTPUTS                                                               #
##########################################################################
Outputs:
  # ExtensionsLayer:
  #   Value: !Ref S3LogExtensionsLayer
  #   Description: Log Extension Layer ARN
  Function:
    Value: !Ref Function
    Description: Lambda Function
  LogExtensionsBucketName:
    Value: !Ref LogExtensionsBucket
